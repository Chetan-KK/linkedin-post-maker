{
  "title": "Leveraging CSS Grid for Responsive Web Design",
  "description": "‚ú® CSS Grid is a powerful layout system available in CSS that allows you to create complex and responsive web designs with ease. It provides a two-dimensional grid-based layout system, optimized for responsive design and making it simpler to arrange elements on a page.",
  "hashtags": [
    "css",
    "frontend",
    "webdev",
    "responsive",
    "grid",
    "webdesign",
    "development",
    "developer",
    "code",
    "tech",
    "tips",
    "guide",
    "cssgrid",
    "learn",
    "learncode",
    "tutorial",
    "web",
    "development",
    "frontenddeveloper",
    "frontendengineer"
  ],
  "content": [
    {
      "name": "Introduction to CSS Grid",
      "description": "‚ú® CSS Grid is a powerful layout system available in CSS that allows you to create complex and responsive web designs with ease. It provides a two-dimensional grid-based layout system, optimized for responsive design and making it simpler to arrange elements on a page.",
      "codeLang": "css",
      "code": ".container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 10px;\n}\n.item {\n  background: #f3f3f3;\n  padding: 20px;\n  border: 1px solid #ddd;\n}"
    },
    {
      "name": "Creating a Basic Grid Layout",
      "description": "üìê Start by defining a container element as a grid. Use `grid-template-columns` to set up your columns and `grid-gap` for spacing between items.",
      "codeLang": "html",
      "code": "<div class='container'>\n  <div class='item'>1</div>\n  <div class='item'>2</div>\n  <div class='item'>3</div>\n  <div class='item'>4</div>\n  <div class='item'>5</div>\n  <div class='item'>6</div>\n</div>"
    },
    {
      "name": "Responsive Grid Layout",
      "description": "üì± Make your grid responsive by using media queries. Adjust the number of columns and spacing based on the screen size.",
      "codeLang": "css",
      "code": "@media (max-width: 600px) {\n  .container {\n    grid-template-columns: 1fr;\n  }\n}"
    },
    {
      "name": "Advanced Grid Features",
      "description": "üöÄ Explore advanced CSS Grid features like `grid-template-areas`, `grid-auto-flow`, and `grid-template-rows` to create more complex and dynamic layouts.",
      "codeLang": "css",
      "code": ".container {\n  display: grid;\n  grid-template-areas: 'header header header'\n                       'main main sidebar'\n                       'footer footer footer';\n  grid-gap: 10px;\n}\n.header { grid-area: header; }\n.main { grid-area: main; }\n.sidebar { grid-area: sidebar; }\n.footer { grid-area: footer; }"
    }
  ]
}
